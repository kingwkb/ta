{"version":3,"sources":["Setting.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Setting","props","handleInputChange","event","name","target","value","setState","handleSubmit","localStorage","setItem","state","key","secret","onSave","handleCancel","onCancel","handleClear","inputName","forEach","removeItem","this","getItem","Dialog","open","onEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","style","color","TextField","label","margin","fullWidth","onChange","DialogActions","Button","onClick","React","Component","Dashboard","initKranken","kraken","KrakenClient","url","hasKey","statistic","data","trades","filter","ele","startTime","time","endTime","hasOwnProperty","wsname","buy","vol","BigNumber","cost","fee","sell","type","plus","fetchTradesData","loading","done","prices","opts","ofs","tradesCount","api","error","alert","message","totalTradesCount","console","log","result","count","lastUpdateTime","moment","format","ids","Object","keys","id","item","assetPairs","pair","push","Math","min","length","setTimeout","saveTradesData","reloadHandler","preventDefault","wsConnect","ws","WebSocket","onopen","msg","getPairs","send","JSON","stringify","onmessage","parse","Array","isArray","price","onerror","wsClose","onclose","close","from","Set","map","fetchAssetPairs","fetchAssets","assets","pairItemClickHandler","child","onTimeClickHandler","cellData","e","clearTimeHandler","undefined","setScrollerRef","ref","_windowScrollerRef","settingOpen","prevProps","prevState","updatePosition","Fragment","Container","Grid","container","spacing","PairsList","variant","size","LinearProgress","unix","href","StatisticList","TradesList","scrollerRef","onTimeClick","height","isScrolling","onChildScroll","registerChild","scrollTop","disableHeight","width","autoHeight","onScroll","headerHeight","rowHeight","rowCount","rowGetter","index","dataKey","cellRenderer","rowIndex","Link","formatNumber","items","MenuItem","unshift","Select","displayEmpty","listItems","StatisitcItem","Table","TableHead","TableRow","TableCell","title","TableBody","parseFloat","hold","minus","div","rowSpan","align","toFixed","num","isNaN","s","toString","split","replace","join","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73b2be72.chunk.js","sourcesContent":["import React from 'react';\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Button, TextField, DialogContentText } from \"@material-ui/core\";\n\nclass Setting extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.inputName = ['key', 'secret']\n        this.state = {key: '', secret: ''}\n    }\n\n    componentDidMount() {\n        this.inputName.forEach(name => {\n            const value = localStorage.getItem(name)\n            // console.log(value)\n            if (value) {\n                this.setState({\n                    [name]: value\n                })\n            }\n        });\n    }\n\n    handleInputChange = (event) => {\n        const name = event.target.name\n        const value = event.target.value\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = (event) => {\n        localStorage.setItem('key', this.state.key)\n        localStorage.setItem('secret', this.state.secret)\n        this.props.onSave && this.props.onSave()\n    }\n\n    handleCancel = (event) => {\n        this.props.onCancel && this.props.onCancel()\n    }\n\n    handleClear = (event) => {\n        this.inputName.forEach(name => {\n            localStorage.removeItem(name)\n            this.setState({\n                [name]: ''\n            })\n        });\n    }\n\n    render() {\n        return (\n            <Dialog open={!!this.props.open} onEscapeKeyDown={this.handleCancel}>\n                <DialogTitle>\n                    Settings\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Kraken API Key and Secret\n                    </DialogContentText>\n                    <DialogContentText>\n                        Only permission with \"Query Closed Orders & Trades\" and \"Access WebSockets API\"\n                    </DialogContentText>\n                    <DialogContentText style={{color:\"red\"}}>\n                        DO NOT OTHER PERMISSIONS\n                    </DialogContentText>\n                    <TextField label=\"Key\" margin=\"dense\" fullWidth name=\"key\" value={this.state.key} onChange={this.handleInputChange} />\n                    <TextField label=\"Secret\" margin=\"dense\" fullWidth name=\"secret\" value={this.state.secret} onChange={this.handleInputChange} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel}>Cancel</Button>\n                    <Button onClick={this.handleSubmit}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default Setting\n","import React, { Component } from 'react';\nimport Setting from './Setting';\nimport KrakenClient from 'kraken-api'\nimport moment from 'moment'\nimport BigNumber from 'bignumber.js'\nimport { Button, Container, Table, TableBody, TableCell, TableHead, TableRow, Grid, Link, Select, MenuItem, LinearProgress } from '@material-ui/core'\nimport { Table as VTable, Column, AutoSizer, WindowScroller } from 'react-virtualized'\nimport 'react-virtualized/styles.css';\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.initKranken()\n        this.assetPairs = undefined\n        this.assets = undefined\n        this.ws = null\n        \n        this.trades = localStorage.getItem('trades')\n        if (this.trades === null) {\n            this.trades = []\n        }\n        else {\n            this.trades = JSON.parse(this.trades)\n        }\n        this.totalTradesCount = this.trades.length\n\n        this.state = {\n            loading: false,\n            settingOpen: false,\n            trades: this.trades,\n            done: !!this.trades.length,\n            pair: '',\n            tradesCount: this.trades.length,\n            startTime: undefined,\n            endTime: undefined,\n            assetPairs: false,\n            assets: false,\n            prices: {}\n        }\n    }\n\n    initKranken = () => {\n        this.key = localStorage.getItem('key')\n        this.secret = localStorage.getItem('secret')\n        this.kraken = new KrakenClient(this.key, this.secret, {url: 'https://cors-anywhere.herokuapp.com/https://api.kraken.com'})\n    }\n\n    hasKey = () => {\n        return !!this.key && !!this.secret\n    }\n    \n    \n\n    statistic = () => {\n        let data = {}\n        const trades = this.trades.filter(ele => {\n            return (!this.state.startTime || this.state.startTime >= ele.time) && \n                    (!this.state.endTime || this.state.endTime <= ele.time)\n        })\n        // console.log('trades :', trades);\n        trades.forEach(ele => {\n            if (!data.hasOwnProperty(ele.wsname)) {\n                data[ele.wsname] = {\n                    buy: {vol: BigNumber(0), cost: BigNumber(0), fee: BigNumber(0)},\n                    sell: {vol: BigNumber(0), cost: BigNumber(0), fee: BigNumber(0)}}\n            }\n            if(ele.type === 'buy') {\n                data[ele.wsname].buy.vol = data[ele.wsname].buy.vol.plus(ele.vol)\n                data[ele.wsname].buy.cost = data[ele.wsname].buy.cost.plus(ele.cost)\n                data[ele.wsname].buy.fee = data[ele.wsname].buy.fee.plus(ele.fee)\n            }\n            if(ele.type === 'sell') {\n                data[ele.wsname].sell.vol = data[ele.wsname].sell.vol.plus(ele.vol)\n                data[ele.wsname].sell.cost = data[ele.wsname].sell.cost.plus(ele.cost)\n                data[ele.wsname].sell.fee = data[ele.wsname].sell.fee.plus(ele.fee)\n            }\n        });\n        return data\n    }\n\n    fetchTradesData = () => {\n        if (!this.hasKey()) {\n            alert('Please setting API key and secret')\n            return\n        }\n        if (this.state.loading === false) {\n            this.setState({done: false, loading: 0, prices: {}})\n        }\n        const opts = {\n            ofs: this.state.tradesCount\n        }\n        this.kraken.api('TradesHistory', opts, (error, data) => {\n            if (error) {\n                alert(error.message)\n            }\n            if (data) {\n                if (this.totalTradesCount === 0) {\n                    console.log('data.result.count :', data.result.count);\n                    this.totalTradesCount = data.result.count\n                    this.lastUpdateTime = moment().format()\n                }\n                \n                const ids = Object.keys(data.result.trades)\n                ids.forEach(id => {\n                    const item = data.result.trades[id]\n                    item.id = id\n                    item.wsname = this.assetPairs[item.pair].wsname\n                    this.trades.push(item)\n                });\n                const loading = Math.min((this.state.tradesCount + ids.length) / this.totalTradesCount * 100)\n                this.setState((state) => { return { tradesCount: state.tradesCount + ids.length, loading: loading }})\n                if (this.state.tradesCount < this.totalTradesCount) {\n                    setTimeout(() => {\n                        this.fetchTradesData()\n                    }, 1500);\n                }\n                else {\n                    this.saveTradesData()\n                    this.setState({done: true, loading: false})\n                }\n            }\n        })\n    }\n\n    reloadHandler = (event) => {\n        event.preventDefault()\n        this.trades = []\n        this.totalTradesCount = 0\n        this.setState({tradesCount: 0}, () => {\n            this.fetchTradesData()\n        })\n    }\n    \n    wsConnect = () => {\n        if (this.ws) {\n            return\n        }\n        this.ws = new WebSocket('wss://ws.kraken.com/')\n        this.ws.onopen = (event) => {\n            const msg = {\n                \"event\": \"subscribe\",\n                \"pair\": this.getPairs(),\n                \"subscription\": {\n                    \"name\": \"ticker\"\n                }\n            }\n            this.ws.send(JSON.stringify(msg))\n        }\n        this.ws.onmessage = (event) => {\n            const data = JSON.parse(event.data)\n            if (Array.isArray(data) && data[2] === \"ticker\") {\n                const pair = data[3]\n                const price = data[1][\"c\"][0]\n                this.setState((state) => { return { \n                    prices: {\n                        ...state.prices,\n                        [pair]: price\n                    }\n                 }})\n            }\n        }\n        this.ws.onerror = (event) => {\n            this.wsClose()\n        }\n        this.ws.onclose = (event) => {\n            this.ws = null\n            setTimeout(() => {\n                if (this.state.done) {\n                    this.wsConnect()\n                }\n            }, 1000);\n        }\n    }\n\n    wsClose = () => {\n        if (this.ws) {\n            this.ws.close()\n        }\n    }\n    \n\n    saveTradesData = () => {\n        localStorage.setItem('trades', JSON.stringify(this.trades))\n        this.wsConnect()\n    }\n\n    getPairs = () => {\n        return Array.from(new Set(this.trades.map((item)=> item.wsname)))\n    }\n\n    fetchAssetPairs = () => {\n        if (this.assetPairs) {\n            return\n        }\n        this.kraken.api(\"AssetPairs\", (error, data) => {\n            if (data) {\n                this.assetPairs = data.result\n                this.setState({assetPairs: true})\n            }\n        })\n    }\n\n    fetchAssets = () => {\n        if (this.assets) {\n            return\n        }\n        this.kraken.api(\"Assets\", (error, data) => {\n            if (error) {\n                console.log(error)\n            }\n            if (data) {\n                this.assets = data.result\n                this.setState({assets: true})\n            }\n        })\n    }\n\n    pairItemClickHandler = (event, child) => {\n        this.setState({\n            pair: event.target.value\n        })\n    }\n\n    onTimeClickHandler = (cellData, e) => {\n        e.preventDefault()\n        let startTime, endTime\n        if (!this.state.startTime) {\n            startTime = cellData\n            if (this.state.endTime && startTime >= this.state.endTime) {\n                endTime = this.state.endTime\n            }\n        }\n        else {\n            if (cellData > this.state.startTime) {\n                startTime = cellData\n            } else {\n                startTime = this.state.startTime\n                endTime = cellData\n            }\n        }\n        this.setState({\n            startTime: startTime,\n            endTime: endTime\n        })\n    }\n    \n    clearTimeHandler = (event) => {\n        event.preventDefault()\n        this.setState({\n            startTime: undefined,\n            endTime: undefined\n        })\n    }\n  \n    componentDidMount() {\n        // this.fetchAssets()\n        this.fetchAssetPairs()\n        if (this.state.done) {\n            this.wsConnect()\n        }\n    }\n    \n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.done !== this.state.done) {\n            if (this.state.done) {\n                this.wsConnect()\n            } else {\n                this.wsClose()\n            }\n        }\n        this._windowScrollerRef && this._windowScrollerRef.updatePosition();\n    }\n\n    setScrollerRef = (ref) => {\n        this._windowScrollerRef = ref\n    }\n    \n    render() {\n        return (\n            <React.Fragment>\n                <Container>\n                    <Setting open={this.state.settingOpen} onCancel={()=>this.setState({settingOpen: false})} onSave={()=>{this.setState({settingOpen:false});this.initKranken()}}></Setting>\n                    <Grid container spacing={1}>\n                    <Grid item>{this.state.tradesCount > 0 && this.state.assetPairs &&\n                        <PairsList data={this.getPairs()} pair={this.state.pair} onClick={this.pairItemClickHandler}></PairsList>}</Grid>\n                        <Grid item><Button variant=\"contained\" size=\"small\" onClick={(event) => {this.setState({settingOpen: true})}}>Setting</Button></Grid>\n                        <Grid item><Button variant=\"contained\" size=\"small\" onClick={this.reloadHandler}>Fetch data</Button></Grid>\n                    </Grid>\n                    {this.state.loading !== false && <LinearProgress variant=\"determinate\" value={this.state.loading || 0}></LinearProgress>}\n                    {this.state.tradesCount > 0 && this.state.assetPairs &&\n                    <React.Fragment>\n                        <Grid container spacing={2}>\n                        <Grid item>\n                            {this.state.startTime && \"Start: \"+ moment.unix(this.state.startTime).format()+\" \"}\n                            </Grid>\n                            <Grid item>\n                            {this.state.endTime && \"End: \"+ moment.unix(this.state.endTime).format()+\" \"}</Grid>\n                            <Grid item>\n                            {(this.state.startTime || this.state.endTime) && <a href=\"/\" onClick={this.clearTimeHandler}>Clear</a>}\n                        </Grid>\n                        </Grid>\n                        <StatisticList pair={this.state.pair} data={this.statistic()} prices={this.state.prices}></StatisticList>\n                        <TradesList scrollerRef={this.setScrollerRef} pair={this.state.pair} data={this.trades} onTimeClick={this.onTimeClickHandler}></TradesList>\n                    </React.Fragment>}\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Dashboard;\n\n\nfunction TradesList(props) {\n    let data = props.data\n    const pair = props.pair\n    if (pair) {\n        data = data.filter((item) => item.wsname === pair)\n    }\n\n    return (\n        <WindowScroller\n            ref={props.scrollerRef}>\n            {({height, isScrolling, registerChild, onChildScroll, scrollTop}) => (\n                <AutoSizer disableHeight>\n                    {({width}) => (\n                        <VTable\n                            autoHeight\n                            isScrolling={isScrolling}\n                            onScroll={onChildScroll}\n                            scrollTop={scrollTop}\n                            width={width}\n                            height={height}\n                            headerHeight={20}\n                            rowHeight={30}\n                            rowCount={data.length}\n                            rowGetter={({index}) => data[index]}>\n                            <Column dataKey=\"index\" width={30} cellRenderer={({rowIndex}) => rowIndex}></Column>\n                            <Column label=\"Time\" dataKey=\"time\"\n                                cellRenderer={({cellData}) => (\n                                    <Link href=\"#\" onClick={(e) => props.onTimeClick(cellData, e)}>{moment.unix(cellData).format()}</Link>\n                                )}\n                            width={210}></Column>\n                            <Column label=\"Pair\" dataKey=\"wsname\" width={100}></Column>\n                            <Column label=\"Type\" dataKey=\"type\" width={30}></Column>\n                            <Column label=\"OrderType\" dataKey=\"ordertype\" width={100}></Column>\n                            <Column style={{\"textAlign\": \"right\"}} label=\"Price\" dataKey=\"price\" width={100} cellRenderer={({cellData}) => formatNumber(cellData)}></Column>\n                            <Column style={{\"textAlign\": \"right\"}} label=\"Vol\" dataKey=\"vol\" width={130} cellRenderer={({cellData}) => formatNumber(cellData)}></Column>\n                            <Column style={{\"textAlign\": \"right\"}} label=\"Cost\" dataKey=\"cost\" width={130} cellRenderer={({cellData}) => formatNumber(cellData)}></Column>\n                            <Column style={{\"textAlign\": \"right\"}} label=\"Fee\" dataKey=\"fee\" width={100} cellRenderer={({cellData}) => formatNumber(cellData)}></Column>\n                            <Column style={{\"textAlign\": \"right\"}} label=\"Margin\" dataKey=\"margin\" width={100} cellRenderer={({cellData}) => formatNumber(cellData)}></Column>\n                        </VTable>\n                    )}\n                </AutoSizer>\n            )}\n        </WindowScroller>\n    )\n}\n\nfunction PairsList(props) {\n    const pairs = props.data\n    const items = pairs.map((pair) => <MenuItem key={pair} value={pair}>{pair}</MenuItem>)\n    items.unshift(<MenuItem key=\"none\" value=''>All Paris</MenuItem>)\n    return (\n        <Select onChange={props.onClick} value={props.pair} displayEmpty>\n            {items}\n        </Select>\n    )\n}\n\nfunction StatisticList(props) {\n    const pair = props.pair\n    const prices = props.prices\n    let data = {};\n    if (pair === '') {\n        data = props.data\n    } else {\n        data[pair] = props.data[pair]\n    }\n    \n    const listItems = Object.keys(data).map(item =>\n        <StatisitcItem key={item} pair={item} data={data[item]} price={prices[item]}></StatisitcItem>\n    )\n\n    return (\n        <Table size=\"small\">\n            <TableHead>\n                <TableRow>\n                    <TableCell></TableCell>\n                    <TableCell>type</TableCell>\n                    <TableCell>vol</TableCell>\n                    <TableCell>cost</TableCell>\n                    <TableCell>fee</TableCell>\n                    <TableCell title=\"average price\">price (A)</TableCell>\n                    <TableCell>price (Now)</TableCell>\n                    <TableCell>value</TableCell>\n                    <TableCell>profit</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {listItems}\n            </TableBody>\n        </Table>\n    )\n}\n\nfunction StatisitcItem(props) {\n    const pair = props.pair\n    const data = props.data\n    const price = parseFloat(props.price)\n    if (!data) {\n        return null\n    }\n    const hold = {\n        vol: data.buy.vol.minus(data.sell.vol),\n        cost: data.buy.cost.minus(data.sell.cost),\n        fee: data.buy.fee.plus(data.sell.fee)\n    }\n    hold.price = hold.cost.div(hold.vol)\n    return (\n        <React.Fragment>\n            <TableRow>\n                <TableCell rowSpan=\"3\">{pair}</TableCell>\n                <TableCell>buy</TableCell>\n                <TableCell align=\"right\">{formatNumber(data.buy.vol.toFixed())}</TableCell>\n                <TableCell align=\"right\">{formatNumber(data.buy.cost.toFixed())}</TableCell>\n                <TableCell align=\"right\">{formatNumber(data.buy.fee.toFixed())}</TableCell>\n                <TableCell align=\"right\">{formatNumber(data.buy.cost.div(data.buy.vol).toFixed(5))}</TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>sell</TableCell>\n                <TableCell align=\"right\">{formatNumber(data.sell.vol.toFixed())}</TableCell>\n                <TableCell align=\"right\">{formatNumber(data.sell.cost.toFixed())}</TableCell>\n                <TableCell align=\"right\">{formatNumber(data.sell.fee.toFixed())}</TableCell>\n                <TableCell align=\"right\">{formatNumber(data.sell.cost.div(data.sell.vol).toFixed(5))}</TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell>hold</TableCell>\n                <TableCell align=\"right\">{formatNumber(hold.vol.toFixed())}</TableCell>\n                <TableCell align=\"right\">{formatNumber(hold.cost.toFixed())}</TableCell>\n                <TableCell align=\"right\">{formatNumber(hold.fee.toFixed())}</TableCell>\n                <TableCell align=\"right\">{formatNumber(hold.price.toFixed(5))}</TableCell>\n                <TableCell align=\"right\">{formatNumber(price.toFixed(5))}</TableCell>\n                <TableCell align=\"right\">{formatNumber((hold.vol * price).toFixed(5))}</TableCell>\n                <TableCell align=\"right\">{formatNumber((hold.vol * price - hold.cost).toFixed(5))}</TableCell>\n            </TableRow>\n        </React.Fragment>\n    )\n}\n\nfunction formatNumber(num) {\n    if (num === undefined || isNaN(num) || parseFloat(num) === 0) {\n        return '-'\n    }\n    const s = num.toString().split('.')\n    s[0] = s[0].replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n    return s.join('.')\n}","import React from 'react';\nimport Dashboard from './Dashboard'\nimport './App.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Dashboard></Dashboard>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}